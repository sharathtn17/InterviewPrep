package Interview;

import java.util.HashMap;

public class BalancedParantisis {
	
	HashMap<String,String> map=new HashMap<String,String>(){{
		 put("{","}");
		 put("(",")");
		 put("[","]");
		
	}};
	
static class stack{
	
	int top=-1;
	int max=999;
	char items[] = new char[100];
	
	void push(char ele)
	{
		if(top==max)
		{
			
			System.out.println("Stack full"); 
		}else{
			
			items[++top]=ele;
		}
		
	}
	
	char pop()
	{
		if(top==-1)
		{
			System.out.println("Stack Empty"); 
			return 0;
		}else
		{
			return items[top--];
			
		}
		
	}
	 boolean isEmpty()  
     { 
         return (top == -1) ? true : false; 
     } 
	
	
	
	
}
	
	public boolean matchingParentis(String pop,String expect)
	{
		if(map.get(pop) == null)
		{
			return false;
		}else if(map.get(pop)==expect)
		{
			return true;
		}
				
		return false;
	}

	public static void main(String args[])
	{
		char exp[] = {'{','(',')','}','[',']'}; 
        if (areParenthesisBalanced(exp)) 
          System.out.println("Balanced "); 
        else
          System.out.println("Not Balanced ");   
		
	}

	private static boolean areParenthesisBalanced(char[] exp) {
		// TODO Auto-generated method stub
		return false;
	}
}
