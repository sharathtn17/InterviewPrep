package Interview;

public class QueuImp {

	static class queue
	{
		
		int rear=-1;
		int front=-1;
		
		int max=4;
		int que[]=new int[max];
		
		boolean isEmpty()
		{
			if(front==-1)
				return true;
			else
				return false;
		}
		boolean isFull()
		{
			if(front==max-1)
				return true;
			else
				return false;
		}
		
		void add(int ele)
		{
			if(!isFull()){
				
			
			if(front==-1)
			{
				que[++front]=ele;
				rear++;
				System.out.println(front+"front");
			}else
			{
				que[++front]=ele;
				System.out.println(front+"front");
			}
			}else{
			System.out.println("Queue is Full");	
			}
		}
		int remove()
		{
			if(isEmpty())
			{
				System.out.println("Queue is empty");
				return 0;
			}
			if(front==rear)
			{   
				int e=que[front];
				front=-1;
				rear=-1;
				System.out.println(e);
				System.out.println(rear+"rear");
				return e;
				
			}else
			{
				int e=que[rear];
				rear++;
				System.out.println(e);
				System.out.println(rear+"rear");
				return e;
			}
			
		}
		@Override
		public String toString()
		{
			if(!isEmpty())
		{
			for(int i=rear;i<=front;i++)
			{
				System.out.print(que[i]);
			}
			return "";
			
		}
		return "";
		}
	}
	
	
	public static void main(String args[])
	{
		
		queue q=new queue();
		q.add(2);
		q.add(4);
		q.add(7);
		q.add(1);
		q.add(9);
		System.out.println(q);
		q.remove();
		
	}
	
}
