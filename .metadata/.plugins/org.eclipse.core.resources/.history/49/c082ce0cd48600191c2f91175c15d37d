package com.project.tests;

import java.io.IOException;
import java.sql.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.util.HashMap;
import java.util.concurrent.TimeUnit;

import org.testng.annotations.DataProvider;
import org.testng.annotations.Listeners;
import org.testng.annotations.Optional;
import org.testng.annotations.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.logging.LogEntries;
import org.openqa.selenium.logging.LogEntry;
import org.openqa.selenium.logging.LogType;
import org.openqa.selenium.support.pagefactory.DefaultElementLocatorFactory;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.ExpectedConditions;

import com.beust.jcommander.Parameter;
import com.project.functionalComponet.BaseTest;
import com.project.functionalComponet.Users;
import com.project.functionalComponet.Waits;
import com.project.pages.LoginPage;

import PageAction.LoginPageAction;
import Utility.HarListener;
import Utility.ReportGeneration;
@Listeners(ReportGeneration.class)
public class TC_LoginTC extends BaseTest{
	
	
	@Test
	public void loginTest(/*@Optional("browser") String browser*/) throws IOException 
	{
			
		/*//logger.info("URL is opened");
		
		//LoginPageAction.signIN_Action("selenium", "selenium").VerifyLogin("");
		LoginPage lp=new LoginPage(driver);
		lp.typetext("isdisplayed in selenium")
		.submitb()
		sys
		.VerifyLogin();*/
	//	System.out.println(username +" "+ pwd +" "+env+" "+inti);
		
		BaseTest.driver.get("https://freecrm.com/");
		
		//Actions act=new Actions(driver);
		
		WebElement CRM=driver.findElement(By.xpath("//a[contains(text(),'CRM')]"));
		System.out.println("**********************THIS IS A ANALYSSELOG*************");
		analyzeLog();
		System.out.println("**********************######THIS IS A ANALYSSELOG END########*************");
		Date date = new Date(0);
	    String strDateFormat = "hh:mm:ss a";
	    DateFormat dateFormat = new SimpleDateFormat(strDateFormat);
	    String formattedDate= dateFormat.format(date);
	    System.out.println("Current time of the day using Date - 12 hour format: " + formattedDate);
	//	wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//a[contains(text(),'382')]")));
		   
	
	    analyzeLog();
	//	Waits.changeExplicitWaitDuration(driver,Duration.ofSeconds(5)).until(ExpectedConditions.elementToBeClickable(By.xpath("//a[contains(text(),'sososo')]")));
		   Date date2 = new Date(0);
		    String strDateFormat2 = "hh:mm:ss a";
		    DateFormat dateFormat2 = new SimpleDateFormat(strDateFormat2); 
		    String formattedDate2= dateFormat2.format(date2);
		    System.out.println("Current time of the day using Date - 12 hour format: " + formattedDate2);
	//	act.moveToElement(CRM).build().perform();
		
		driver.findElement(By.xpath("//a[contains(text(),'Call Center')]")).click();
		System.out.println("Hi");
		//._homePage()
		/*.Loginpage()
		.setUserName("wqqwqwq")
		//.setPassword("qwqwqwq")
		.clickSubmit()
		.VerifyLogin()
		._loginPage()
		.setPassword("dsdsdd");*/
		
		System.out.println("**********************THIS IS A ANALYSSELOG*************");
		analyzeLog();
		System.out.println("**********************######THIS IS A ANALYSSELOG END########*************");

}
	
	public void analyzeLog() 
	{    driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
        LogEntries logEntries = driver.manage().logs().get(LogType.BROWSER);
        for (LogEntry entry : logEntries) {
            System.out.println(new Date(entry.getTimestamp()) + " " + entry.getLevel() + " " + entry.getMessage());
            //do something useful with the data
        }
    }
	
	@DataProvider(name="login")
	public Object[][] dataProvider()
	{
		return new Object[][]{
			{"name1","pwd1","qa",10} ,{"name2","pwd2","PROD",76565765}
		
		                     
	};
	}
	

}